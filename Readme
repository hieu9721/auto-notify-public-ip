# 🌐 IP Monitor Bot

Bot theo dõi địa chỉ IP public và gửi thông báo tự động khi có thay đổi. Hỗ trợ thông báo qua Email, Telegram và Discord.

## ✨ Tính năng

- 🔄 **Theo dõi IP liên tục** với khoảng thời gian tùy chỉnh
- 📧 **Thông báo đa kênh**: Email, Telegram, Discord
- 📝 **Ghi log chi tiết** với timestamp
- 🔄 **Khôi phục tự động** khi gặp lỗi
- ⚙️ **Chạy như systemd service** hoặc thủ công
- 🛡️ **Backup multiple IP services** để đảm bảo độ tin cậy
- 🎯 **Lightweight** - chỉ cần 1 dependency duy nhất

## 📋 Yêu cầu hệ thống

- **Python 3.6+**
- **Linux** (Ubuntu, CentOS, Debian, Arch, etc.)
- **Internet connection**
- **pip3** hoặc **python3-pip**

## 🚀 Cài đặt nhanh

### 1. Clone hoặc tải project
```bash
mkdir ~/ip-monitor-bot
cd ~/ip-monitor-bot
```

### 2. Tạo các file chính
Tạo file `main.py` với code từ repository này.

### 3. Cài đặt dependencies
```bash
pip3 install requests python-dotenv
```

### 4. Cấu hình environment variables
```bash
# Sao chép file env mẫu
cp .env.example .env

# Chỉnh sửa file .env với thông tin của bạn
nano .env
```

### 5. Kiểm tra hoạt động
```bash
python3 main.py --check-ip
```

## ⚙️ Cấu hình chi tiết

### 🌍 Environment Variables (Khuyến nghị)

Bot hỗ trợ cấu hình qua **environment variables** để bảo mật tốt hơn. Tạo file `.env`:

```bash
# Sao chép file mẫu
cp .env.example .env
```

**Ví dụ file `.env`:**
```bash
# Cài đặt chung
CHECK_INTERVAL=300
NOTIFICATION_METHODS=email,telegram,discord

# Email
EMAIL_SENDER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_RECIPIENT=recipient@gmail.com

# Telegram - Gửi đến nhiều chat cùng lúc
TELEGRAM_BOT_TOKEN=123456789:ABCDEF...
TELEGRAM_CHAT_IDS=123456789,987654321,-1001234567890

# Discord - Gửi đến nhiều webhook cùng lúc  
DISCORD_WEBHOOK_URLS=https://discord.com/api/webhooks/111/AAA,https://discord.com/api/webhooks/222/BBB
```

### 📧 Cấu hình Email (Gmail)

1. **Bật xác thực 2 bước** cho Gmail
2. **Tạo App Password**:
   - Vào [Google Account Settings](https://myaccount.google.com/)
   - Security → 2-Step Verification → App passwords
   - Tạo password cho "Mail"
3. **Thêm vào `.env`**:
```bash
EMAIL_SENDER=your-email@gmail.com
EMAIL_PASSWORD=app-password-16-chars
EMAIL_RECIPIENT=recipient@gmail.com
```

### 📱 Cấu hình Telegram (Multiple Chat IDs)

1. **Tạo bot**:
   - Nhắn tin với [@BotFather](https://t.me/botfather)
   - Gửi `/newbot` và làm theo hướng dẫn
   - Lưu **bot token**

2. **Lấy Chat IDs**:
   ```bash
   # Nhắn tin với bot, sau đó truy cập URL này:
   curl "https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates"
   
   # Tìm "chat":{"id": YOUR_CHAT_ID} trong response
   ```

3. **Cấu hình nhiều chat IDs**:
```bash
TELEGRAM_BOT_TOKEN=123456789:ABCDEF...
# Gửi đến nhiều chat/group cùng lúc (cách nhau bởi dấu phẩy)
TELEGRAM_CHAT_IDS=123456789,987654321,-1001234567890
```

### 💬 Cấu hình Discord (Multiple Webhooks)

1. **Tạo webhooks**:
   - Vào Discord server → Server Settings
   - Integrations → Webhooks → New Webhook
   - Copy webhook URL cho từng server/channel

2. **Cấu hình nhiều webhooks**:
```bash
# Gửi đến nhiều Discord server/channel cùng lúc
DISCORD_WEBHOOK_URLS=https://discord.com/api/webhooks/111/AAA,https://discord.com/api/webhooks/222/BBB
```

### 🔄 Cấu hình JSON (Tùy chọn)

Nếu không muốn dùng `.env`, bạn có thể dùng `config.json`:

```json
{
  "notification_methods": ["telegram", "discord"],
  "telegram": {
    "bot_token": "123456789:ABCDEF...",
    "chat_ids": ["123456789", "987654321", "-1001234567890"]
  },
  "discord": {
    "webhook_urls": [
      "https://discord.com/api/webhooks/111/AAA",
      "https://discord.com/api/webhooks/222/BBB"
    ]
  }
}
```### ⚡ Cấu hình đa kênh
```bash
# Gửi thông báo đến tất cả các kênh
NOTIFICATION_METHODS=email,telegram,discord

# Hoặc chỉ một số kênh
NOTIFICATION_METHODS=telegram,discord
```

## 🔧 Cách sử dụng

### Chạy thủ công
```bash
# Kiểm tra IP hiện tại
python3 main.py --check-ip

# Chạy bot (Ctrl+C để dừng)
python3 main.py

# Chạy với file config tùy chỉnh
python3 main.py --config my_config.json
```

### Chạy như systemd service

1. **Tạo service file**:
```bash
sudo tee /etc/systemd/system/ip-monitor.service > /dev/null << EOF
[Unit]
Description=IP Monitor Bot
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$HOME/ip-monitor-bot
ExecStart=/usr/bin/python3 $HOME/ip-monitor-bot/main.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF
```

2. **Khởi động service**:
```bash
# Reload systemd
sudo systemctl daemon-reload

# Enable và start service
sudo systemctl enable ip-monitor
sudo systemctl start ip-monitor

# Kiểm tra trạng thái
sudo systemctl status ip-monitor

# Xem logs
sudo journalctl -u ip-monitor -f
```

3. **Quản lý service**:
```bash
# Dừng
sudo systemctl stop ip-monitor

# Khởi động lại
sudo systemctl restart ip-monitor

# Vô hiệu hóa
sudo systemctl disable ip-monitor
```

## 🐳 Chạy với Docker

### Docker Compose (Khuyến nghị)

1. **Tạo file docker-compose.yml**:
```yaml
version: '3.8'

services:
  ip-monitor:
    build: .
    container_name: ip-monitor-bot
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - CONFIG_FILE=/app/data/config.json
```

2. **Chạy với Docker Compose**:
```bash
# Build và start
docker-compose up -d

# Xem logs
docker-compose logs -f

# Dừng
docker-compose down

# Rebuild
docker-compose up -d --build
```

### Docker thông thường

```bash
# Build image
docker build -t ip-monitor-bot .

# Chạy container
docker run -d \
  --name ip-monitor \
  --restart unless-stopped \
  --env-file .env \
  -v $(pwd)/data:/app/data \
  -v $(pwd)/logs:/app/logs \
  ip-monitor-bot

# Xem logs
docker logs -f ip-monitor

# Dừng container
docker stop ip-monitor && docker rm ip-monitor
```

## 📝 Xem logs

### Log file
```bash
# Xem log real-time
tail -f ~/ip-monitor-bot/main.log

# Xem log cuối
tail -20 ~/ip-monitor-bot/main.log
```

### System journal (nếu chạy như service)
```bash
# Xem log real-time
sudo journalctl -u ip-monitor -f

# Xem log hôm nay
sudo journalctl -u ip-monitor --since today

# Xem log 1 giờ qua
sudo journalctl -u ip-monitor --since "1 hour ago"
```

### Docker logs
```bash
# Docker Compose
docker-compose logs -f

# Docker thông thường
docker logs -f ip-monitor
```

## 🛠️ Tùy chỉnh nâng cao

### Environment Variables đầy đủ

```bash
# File .env với tất cả tùy chọn

# =============================================================================
# GENERAL SETTINGS
# =============================================================================
CHECK_INTERVAL=300
NOTIFICATION_METHODS=email,telegram,discord
LOG_LEVEL=INFO

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
EMAIL_SMTP_SERVER=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_SENDER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_RECIPIENT=recipient@gmail.com

# =============================================================================
# TELEGRAM CONFIGURATION (Multiple Chat Support)
# =============================================================================
TELEGRAM_BOT_TOKEN=123456789:ABCDEF...
# Gửi đến nhiều chat/group cùng lúc
TELEGRAM_CHAT_IDS=123456789,987654321,-1001234567890
# Hoặc chỉ một chat (tương thích ngược)
TELEGRAM_CHAT_ID=123456789

# =============================================================================
# DISCORD CONFIGURATION (Multiple Webhook Support)
# =============================================================================
# Gửi đến nhiều server/channel cùng lúc
DISCORD_WEBHOOK_URLS=https://discord.com/api/webhooks/111/AAA,https://discord.com/api/webhooks/222/BBB
# Hoặc chỉ một webhook (tương thích ngược)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/111/AAA
```

### Script quản lý tiện ích

Tạo script `manage.sh`:
```bash
#!/bin/bash

case "$1" in
    start)
        python3 main.py &
        echo "Bot started in background"
        ;;
    stop)
        pkill -f main.py
        echo "Bot stopped"
        ;;
    status)
        if pgrep -f main.py > /dev/null; then
            echo "Bot is running"
        else
            echo "Bot is not running"
        fi
        ;;
    ip)
        python3 main.py --check-ip
        ;;
    log)
        tail -f main.log
        ;;
    test-telegram)
        echo "Testing Telegram notifications..."
        # Test với IP giả
        ;;
    test-discord)
        echo "Testing Discord notifications..."
        # Test với IP giả
        ;;
    *)
        echo "Usage: $0 {start|stop|status|ip|log|test-telegram|test-discord}"
        ;;
esac
```

```bash
chmod +x manage.sh
./manage.sh start   # Khởi động
./manage.sh status  # Kiểm tra trạng thái
./manage.sh ip      # Xem IP hiện tại
./manage.sh log     # Xem log
./manage.sh stop    # Dừng
```

## 🐛 Troubleshooting

### Lỗi thường gặp

**1. "python-dotenv module not found"**
```bash
pip3 install python-dotenv
# hoặc
python3 -m pip install python-dotenv --user
```

**2. "Cannot load .env file"**
```bash
# Kiểm tra file .env có tồn tại
ls -la .env

# Kiểm tra quyền file
chmod 644 .env
```

**3. "Multiple Telegram chat IDs not working"**
```bash
# Kiểm tra format trong .env
TELEGRAM_CHAT_IDS=123456789,987654321,-1001234567890

# Đảm bảo không có khoảng trắng
# ĐÚNG: 123,456,789
# SAI:   123, 456, 789
```

**4. "Discord webhook failed"**
```bash
# Test webhook thủ công
curl -H "Content-Type: application/json" \
     -d '{"content":"Test message"}' \
     "https://discord.com/api/webhooks/YOUR_WEBHOOK_URL"
```

**5. Environment variables không được đọc**
```bash
# Kiểm tra file .env
cat .env

# Kiểm tra python-dotenv
python3 -c "from dotenv import load_dotenv; load_dotenv(); import os; print(os.getenv('TELEGRAM_BOT_TOKEN'))"
```

### Debug mode

Thêm vào `.env`:
```bash
LOG_LEVEL=DEBUG
```

Hoặc chạy với debug:
```bash
python3 -c "
import logging
logging.basicConfig(level=logging.DEBUG)
exec(open('main.py').read())
"
```

### Test từng thành phần

```bash
# Test lấy IP
python3 -c "
from main import IPMonitor
monitor = IPMonitor()
print('IP:', monitor.get_public_ip())
"

# Test Telegram
python3 -c "
from main import IPMonitor
monitor = IPMonitor()
monitor.send_telegram_notification('1.1.1.1', '2.2.2.2')
"

# Test Discord
python3 -c "
from main import IPMonitor
monitor = IPMonitor()
monitor.send_discord_notification('1.1.1.1', '2.2.2.2')
"
```

## 📊 Giám sát và Bảo mật

### Tạo monitoring script
```bash
#!/bin/bash
# monitor.sh

if ! pgrep -f main.py > /dev/null; then
    echo "$(date): IP Monitor bot is down, restarting..."
    cd ~/ip-monitor-bot
    python3 main.py &
fi
```

Thêm vào crontab:
```bash
crontab -e
# Kiểm tra mỗi 5 phút
*/5 * * * * /path/to/monitor.sh
```

### Bảo mật file .env
```bash
# Chỉ owner có thể đọc/ghi
chmod 600 .env

# Kiểm tra quyền
ls -la .env
```

### Backup cấu hình
```bash
# Tạo backup (không bao gồm sensitive data)
cp config.json config.json.backup

# Hoặc backup toàn bộ (cẩn thận với .env)
tar -czf ip-monitor-backup.tar.gz --exclude='.env' ~/ip-monitor-bot/
```

## 🚀 Tính năng mới

### Multiple Recipients Support
- ✅ **Telegram**: Gửi đến nhiều chat/group cùng lúc
- ✅ **Discord**: Gửi đến nhiều server/channel cùng lúc  
- ✅ **Environment Variables**: Cấu hình qua .env file
- ✅ **Docker Support**: Chạy trong container
- ✅ **Backward Compatibility**: Tương thích với config cũ

### Ví dụ cấu hình đa kênh

```bash
# .env file
NOTIFICATION_METHODS=telegram,discord

# Telegram: Gửi đến 3 chat khác nhau
TELEGRAM_BOT_TOKEN=123456789:ABCDEF...
TELEGRAM_CHAT_IDS=123456789,987654321,-1001234567890

# Discord: Gửi đến 2 server khác nhau
DISCORD_WEBHOOK_URLS=https://discord.com/api/webhooks/111/AAA,https://discord.com/api/webhooks/222/BBB
```

Bot sẽ gửi thông báo đến tất cả 5 đích (3 Telegram + 2 Discord) khi IP thay đổi!

## 📈 Performance

- **CPU usage**: ~0.1% khi idle
- **Memory usage**: ~15-25MB (với python-dotenv)
- **Network**: 1-2KB per check
- **Disk**: Log file tăng ~1MB/tháng
- **Scalability**: Hỗ trợ unlimited chat IDs/webhooks

---

**⭐ Nếu project hữu ích, hãy star repository!**